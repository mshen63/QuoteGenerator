{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","keyWords","quote","author","collection","link","getkeyWords","bind","newQuote","handleTweet","fetch","then","response","json","responseJson","setState","catch","error","console","e","this","target","value","newArr","filter","random1","Math","floor","random","length","word","toLowerCase","text","split","includes","random2","encodeURIComponent","id","onChange","placeholder","type","onClick","href","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAmGeA,G,wDA/Fb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAO,CACVC,SAAU,GACVC,MAAM,eACNC,OAAO,UACPC,WAAW,GACXC,KAAM,IAET,EAAKC,YAAY,EAAKA,YAAYC,KAAjB,gBACjB,EAAKC,SAAS,EAAKA,SAASD,KAAd,gBACd,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBAXF,E,gEAcE,IAAD,OACjBG,MAAM,+BACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKC,SAAS,CACZX,WAAYU,OAGdE,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,kCAIRE,GACVC,KAAKL,SAAS,CACZd,SAAUkB,EAAEE,OAAOC,U,iCAKrB,IAAIC,EAASH,KAAKpB,MAAMI,WAAWoB,QAAO,SAAAtB,GAAK,OAAgB,MAAdA,EAAMC,UACnDsB,EAAUC,KAAKC,MAAMD,KAAKE,SAASL,EAAOM,QAC1CC,EAAOV,KAAKpB,MAAMC,SAAS8B,cAC/B,GAAW,KAAPD,EAAU,CACZP,EAAOA,EAAOC,QAAO,SAAAtB,GAAK,OAAGA,EAAM8B,KAAKD,cAAcE,MAAM,KAAKC,SAASJ,IAAO5B,EAAMC,OAAO4B,cAAcE,MAAM,KAAKC,SAASJ,MAChI,IAAIK,EAAST,KAAKC,MAAMD,KAAKE,SAASL,EAAOM,QACrB,IAAhBN,EAAOM,OACXT,KAAKL,SAAS,CACZb,MAAOqB,EAAOY,GAASH,KACvB7B,OAAQ,KAAKoB,EAAOY,GAAShC,SAI7BiB,KAAKL,SAAS,CACZb,MAAOkB,KAAKpB,MAAMC,SAClBE,OAAQ,mBAIhBiB,KAAKL,SAAS,CACZb,MAAOqB,EAAOE,GAASO,KACvB7B,OAAQ,KAAOoB,EAAOE,GAAStB,W,oCAMnCiB,KAAKL,SAAS,CACbV,KAAM,yDACL+B,mBAAmB,IAAMhB,KAAKpB,MAAME,MAAQ,KAAOkB,KAAKpB,MAAMG,Y,+BAK9D,OACE,sBAAKkC,GAAG,MAAR,UACE,oBAAIA,GAAG,QAAP,6BACA,sBAAKA,GAAG,SAAR,UACE,iEACA,iCACE,uBAAOA,GAAG,SAASf,MAAOF,KAAKpB,MAAMC,SAAUqC,SAAYlB,KAAKd,YAAaiC,YAAY,uBAAuBC,KAAK,SACrH,wBAAQA,KAAK,SAASC,QAAWrB,KAAKZ,SAAtC,0BAIJ,sBAAK6B,GAAG,SAAR,UACE,sBAAKA,GAAG,QAAR,UACE,oBAAIA,GAAK,OAAT,SAAiBjB,KAAKpB,MAAME,QAC5B,oBAAImC,GAAK,SAAT,SAAmBjB,KAAKpB,MAAMG,YAEhC,sBAAKkC,GAAG,UAAR,UACE,wBAAQA,GAAG,YAAYI,QAAWrB,KAAKZ,SAAvC,wBACA,wBAAQiC,QAAWrB,KAAKX,YAAa4B,GAAK,cAA1C,SAAwD,mBAAGhB,OAAO,OAAOqB,KAAMtB,KAAKpB,MAAMK,KAAlC,wC,GAvFpDsC,IAAMC,YCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ba425449.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state=({\n      keyWords: '',\n      quote:'Hello its me',\n      author:'- Adele',\n      collection:[],\n      link: ''\n      })\n   this.getkeyWords=this.getkeyWords.bind(this);\n   this.newQuote=this.newQuote.bind(this);\n   this.handleTweet = this.handleTweet.bind(this);\n  }\n\n  componentDidMount(){\n    fetch(\"https://type.fit/api/quotes\")\n     .then((response) => response.json())\n     .then((responseJson) => {\n       this.setState({\n         collection: responseJson\n       })\n   })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  getkeyWords(e){\n    this.setState({\n      keyWords: e.target.value\n    })\n  }\n\n  newQuote(){\n    let newArr = this.state.collection.filter(quote=>quote.author!=null);\n    let random1 = Math.floor(Math.random()*newArr.length)\n    let word = this.state.keyWords.toLowerCase();\n    if (word!==''){\n      newArr=newArr.filter(quote=>(quote.text.toLowerCase().split(' ').includes(word)||quote.author.toLowerCase().split(' ').includes(word)));\n      let random2= Math.floor(Math.random()*newArr.length)\n          if (newArr.length!==0){\n          this.setState({\n            quote: newArr[random2].text,\n            author: \"- \"+newArr[random2].author\n        })\n          }\n          else{\n            this.setState({\n              quote: this.state.keyWords,\n              author: \"- you >:)\"\n            })\n          }}\n    else{\n      this.setState({\n        quote: newArr[random1].text,\n        author: '- ' + newArr[random1].author\n      })\n    }\n  }\n\n  handleTweet(){\n    this.setState({\n     link: 'https://twitter.com/intent/tweet?hashtags=quotes&text=' +\n      encodeURIComponent('\"' + this.state.quote + '\" ' + this.state.author)\n   })\n  }\n\n    render(){\n      return(\n        <div id=\"all\">\n          <h1 id=\"title\">Quote Generator</h1>\n          <div id=\"search\">\n            <p>Get Quotes by Keyword or Author:</p>\n            <form>\n              <input id=\"editor\" value={this.state.keyWords} onChange = {this.getkeyWords} placeholder=\"Enter a Search Term!\" type=\"text\"></input>\n              <button type=\"button\" onClick = {this.newQuote}>Submit</button>\n            </form>\n          </div>\n\n          <div id=\"bottom\">\n            <div id=\"words\">\n              <h2 id = \"text\">{this.state.quote}</h2>\n              <h3 id = \"author\">{this.state.author}</h3>\n            </div>\n            <div id=\"buttons\">\n              <button id=\"new-quote\" onClick = {this.newQuote}>Anotha One</button>\n              <button onClick = {this.handleTweet} id = \"tweet-quote\"><a target=\"_top\" href={this.state.link}>Tweet Tweet</a></button>\n            </div>\n          </div>\n\n        </div>\n      )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}